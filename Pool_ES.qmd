---
title: "How to calculate and combine effect-sizes?"
subtitle: "September 2024"
authors: "Damien Beillouin  <br/> 
CIRAD-Hortsys"
format:
  revealjs:
    chalkboard: true
    width: 1150
    margin: 0.08
    transition: slide
    background-transition: fade
    slide-number: true
    show-slide-number: print
    footer: "How to calculate and combine effect-sizes?"
filters:
  - shinylive
editor: visual
title-slide-attributes: 
  data-background-image: elephant.png
  data-background-size: 25%
  data-background-position: 90% 80%
include-in-header:
  - text: |
      <style>
      #title-slide .title {
        font-size: 1.5em;
        color: black;
      }
      </style>
---

## Pooling Effect Sizes {.smaller}

Pooling effect sizes is essential for synthesizing results across studies in meta-analysis. Different models can be employed based on the data structure and assumptions.

------------------------------------------------------------------------

## Fixed-Effect Model {.smaller}

The **Fixed-Effect Model** assumes that all studies estimate the same underlying effect size.

### Key Features:

-   Assumes homogeneity of effect sizes across studies.
-   Only one common effect size is estimated.

### Formula:

$$
\hat{\theta}_k = \theta + \varepsilon_k, \quad \varepsilon_k \sim \mathcal{N}(0, s_k^2)
$$

## Fixed-Effect Model {.smaller}

### Weighting:

$$
\bar{\theta}_w = \frac{\sum_{i=1}^{k} w_i \hat{\theta}_i}{\sum_{i=1}^{k} w_i}
$$

Where:

-   bar_theta_w is the **weighted average effect size** across ( k ) studies.

-   hat_theta_i is the **estimated effect size** for the ( i )-th study.

-   w_i is the **weight** for the ( i )-th study, calculated as ( w_i = \frac{1}{v_i} ).

-   v_i is the **variance** of the ( i )-th study.

    and with weights equal to ùë§ùëñ=1/ùë£ùëñ

## Fixed-Effect Model {.smaller}

Let's say: trueRR=1.5; and $$\hat{\theta}_k = \theta + \varepsilon_k$$

```{shinylive-r}
#| standalone: true
#| viewerHeight: 600
# Load necessary libraries
library(shiny)
library(metafor)
library(ggplot2)
library(truncnorm)

# Define UI
ui <- fluidPage(
  titlePanel("Forest Plot with Fixed Effect Model"),
  
  sidebarLayout(
    sidebarPanel(
      sliderInput("sd_true", "Standard Deviation of True Effect Size:",
                  min = 0, max = 1, value = 0.05, step = 0.01),
      sliderInput("sd_sampling", "Standard Deviation of Sampling Error:",
                  min = 0, max = 1, value = 0.2, step = 0.01),
      sliderInput("n_studies", "Number of Studies:",
                  min = 1, max = 100, value = 5, step = 1)
    ),
    
    mainPanel(
      plotOutput("forestPlot")
    )
  )
)

# Define server logic
server <- function(input, output) {
  
  output$forestPlot <- renderPlot({
    # Set parameters
    set.seed(113)  # For reproducibility
    true_effect_size <- 1.5  # Specify a true effect size (e.g., ratio)
    sd_true <- input$sd_true
    sd_sampling <- input$sd_sampling
    n_studies <- input$n_studies
    sample_sizes <- sample(20:100, n_studies)  # Random sample sizes for each study

    # Generate studies data
    studies <- data.frame(
      study = paste("Study", 1:n_studies),
      n = sample_sizes
    )
    
    # Generate random effect sizes with associated sampling error
    studies$mean_ratio <- true_effect_size+rnorm(n_studies, mean = 0, sd = sd_sampling)
    
    # Generate standard errors from a truncated normal distribution
    studies$se <- rtruncnorm(n_studies, a = 0, mean = 0.2, sd = 0.1)
    
    # Calculate confidence intervals
    studies$ci_lower <- studies$mean_ratio - 1.96 * studies$se
    studies$ci_upper <- studies$mean_ratio + 1.96 * studies$se
    studies$color = 2
    
    # Calculate mean and CI for the overall effect size using a fixed-effects model
    fixed_effect <- rma(yi = mean_ratio, sei = se, method = "FE",data=studies)
     fixed_effectUN <- rma(yi = mean_ratio, sei = se, method = "FE",weighted=FALSE,data=studies)
    
     # Extract relevant information from the fixed_effect object
    summary_table <- data.frame(
      study = "Overall_weighted",
      n = NA,
      mean_ratio = fixed_effect$b,
      se = NA,  # Standard error not directly available for overall effect size
      ci_lower = fixed_effect$ci.lb,
      ci_upper = fixed_effect$ci.ub,
      color = 1
    )
    
         # Extract relevant information from the fixed_effect object
    summary_tableUN <- data.frame(
      study = "Overall_unweighted",
      n = NA,
      mean_ratio = fixed_effectUN$b,
      se = NA,  # Standard error not directly available for overall effect size
      ci_lower = fixed_effectUN$ci.lb,
      ci_upper = fixed_effectUN$ci.ub,
      color = 1
    )
    
    # Combine study data with overall effect size
    plot_data <- rbind(studies, summary_table)
     plot_data <- rbind(plot_data, summary_tableUN)
    
    # Create forest plot
    forest_plot <- ggplot(plot_data, aes(x = reorder(study, rev(study)), y = mean_ratio)) +
      geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), width = 0.2, size = 1) + 
      geom_point(aes(color = factor(color))) +
      geom_hline(yintercept = true_effect_size, linetype = "dashed", color = "blue") +  
      labs(title = "Forest Plot : Fixed Effect Model",
           subtitle = paste("I¬≤ = ", round(fixed_effect$I2, 2), "%"),
           x = "Studies",
           y = "Effect Size (Ratio)") +
      theme_minimal() +
      theme(legend.position = "none") +  # Remove legend for clarity
      coord_flip() +
      # geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = true_effect_size - 1.96 * sd_true, ymax = true_effect_size + 1.96 * sd_true), 
      #           fill = "blue", alpha = 0.1)+
           geom_point(aes(size = 1/se, color = factor(color))) +
      scale_size_continuous(range = c(2, 5))+
      geom_text(aes(x=reorder(study, rev(study)), y=0.5, label=paste0("n=",n)))+
      geom_hline(yintercept = true_effect_size, linetype = "dotted", color = "blue")

    # Display the forest plot
    print(forest_plot)
  })
}

# Run the application 
shinyApp(ui = ui, server = server)
```

## Fixed-Effect Model {.smaller}

![](images/fixed%20model.png){fig-align="center"}

## Limitations of Fixed-Effect Models

-   The outcome of interest could have been measured in many ways.

-   The type of treatment may not have been exactly the same.

-   The intensity and duration of treatment could differ.

-   The target population of the studies may not have been exactly the same for each study.

-   The control groups used may have been different.

## Random-Effects Model {.smaller}

The **Random-Effects Model** accounts for variability among studies, assuming that effect sizes vary due to different study conditions.

### Formula:

$$\hat{\theta}_k = \mu + \zeta_k + \epsilon_k ;  \quad \mathcal\zeta_k \sim {N}(0, ùíØ_k^2) ; \quad \mathcal\epsilon_k \sim {N}(0, s_k^2)$$

-   hat_theta_k: Estimated effect size for study ( k ).
-   mu : The overall mean (or meta-analytic mean).
-   ùúÅ_ùëò: Random effect for study ( k ),ùíØ\^2 is the between-study variance.
-   epsilon_k: error term, sk2is the within study variance

## Random Model Estimation {.smaller}

-   The weights are defined as:

$$
w_i^* = \frac{1}{\sigma^2 + \tau^2}
$$

Where:

-   ( \hat{\theta}\_k ): Estimated effect size for study ( k ).
-   ( \mu ): The overall mean (or meta-analytic mean).
-   ( \zeta\_k \sim \mathcal{N}(0, \tau\^2) ): Random effect for study ( k ), where ( \tau\^2 ) is the between-study variance.
-   ( \epsilon\_k \sim \mathcal{N}(0, v_k) ): Within-study error term for study ( k ), where ( v_k ) is the variance of the effect size estimate for study ( k ).

## Heterogeneity : I¬≤ Statistic {.smaller}

-   **Definition**:

    -   I¬≤ (I-squared) is a measure of the percentage of variation across studies that is attributable to heterogeneity rather than chance.

-   **Importance**:

    -   Understanding I¬≤ helps researchers assess the consistency of results across studies.
    -   It informs decisions on whether to use fixed or random effects models in meta-analyses.

-   **Calculation**:

    -   I¬≤ is calculated from the Q statistic:

    $$  I¬≤ = 100\% \times \frac{\tau^2}{\tau^2 + s_k^2}$$

    Where: ùíØ\^2 is the between-study variance. sk2is the within study variance

## I¬≤ Statistic {.smaller}

-   **Considerations**:
    -   High I¬≤ values do not always imply that meta-analysis is inappropriate.
    -   Subgroup analyses and meta-regressions can help explore sources of heterogeneity.
-   **Interpretation**:
    -   **0%**: No heterogeneity. All studies have similar effects.
    -   **1-25%**: Low heterogeneity. Minor variations among studies.
    -   **25-50%**: Moderate heterogeneity. Some differences in effects.
    -   **50-75%**: Substantial heterogeneity. Notable variations among studies.
    -   **75-100%**: Considerable heterogeneity. Major differences in effects.

## Mixed Model Estimation {.scrollable}

Let's say: trueRR=1.5; and (ùúÉ_ùëò )¬†ÃÇ=ùúá+ ùúÅ_ùëò+ ùúÄ_ùëò

```{shinylive-r}
#| standalone: true
#| viewerHeight: 600
# Load necessary libraries
library(shiny)
library(metafor)
library(ggplot2)
library(truncnorm)
library(gridExtra)

# Define UI
ui <- fluidPage(
  titlePanel("Forest Plot with Fixed Effect Model"),
  
  sidebarLayout(
    sidebarPanel(
      sliderInput("sd_true", "Standard Deviation of True Effect Size:",
                  min = 0, max = 1, value = 0.05, step = 0.01),
      sliderInput("sd_sampling", "Standard Deviation of Sampling Error:",
                  min = 0, max = 1, value = 0.2, step = 0.01),
      sliderInput("n_studies", "Number of Studies:",
                  min = 1, max = 10, value = 5, step = 1),
       checkboxInput("show_mean", "show_mean_without_sample_error", value = TRUE)
    ),
    
    mainPanel(
      plotOutput("forestPlot")
    )
  )
)

# Define server logic
server <- function(input, output) {
  
  output$forestPlot <- renderPlot({
    # Set parameters
    set.seed(113)  # For reproducibility
    true_effect_size <- 1.5  # Specify a true effect size (e.g., ratio)
    sd_true <- input$sd_true
    sd_sampling <- input$sd_sampling
    n_studies <- input$n_studies
    sample_sizes <- sample(20:100, n_studies)  # Random sample sizes for each study

    # Generate studies data
    studies <- data.frame(
      study = paste("Study", 1:n_studies),
      n = sample_sizes
    )
    
    # Generate random effect sizes with associated sampling error
    studies$mean_1 <- rnorm(n_studies, mean = true_effect_size, sd = sd_true)
    studies$mean_ratio<- studies$mean_1+rnorm(n_studies, mean = 0, sd = sd_sampling)
    
    # Generate standard errors from a truncated normal distribution
    studies$se <- rtruncnorm(n_studies, a = 0, mean = 0.2, sd = 0.1)
    
    # Calculate confidence intervals
    studies$ci_lower <- studies$mean_ratio - 1.96 * studies$se
    studies$ci_upper <- studies$mean_ratio + 1.96 * studies$se
    studies$color = 2
    
    # Calculate mean and CI for the overall effect size using a fixed-effects model
    random_effect <- rma(yi = mean_ratio, sei = se,data=studies)
     fixed_effectUN <- rma(yi = mean_ratio, sei = se, method = "FE",weighted=FALSE,data=studies)
    
     # Extract relevant information from the random_effect object
    summary_table <- data.frame(
      study = "Overall_random_effect",
      n = NA,
      mean_1 = NA,
      mean_ratio = random_effect$b,
      se = NA,  # Standard error not directly available for overall effect size
      ci_lower = random_effect$ci.lb,
      ci_upper = random_effect$ci.ub,
      color = 1
    )
    
         # Extract relevant information from the fixed_effect object
    summary_tableUN <- data.frame(
      study = "Overall_unweighted",
      n = NA,
      mean_1 = NA,
      mean_ratio = fixed_effectUN$b,
      se = NA,  # Standard error not directly available for overall effect size
      ci_lower = fixed_effectUN$ci.lb,
      ci_upper = fixed_effectUN$ci.ub,
      color = 1
    )
    
    # Combine study data with overall effect size
    plot_data <- rbind(studies, summary_table)
     plot_data <- rbind(plot_data, summary_tableUN)
    
     
     k <- random_effect$k
     wi <- 1/random_effect$vi
     vt <- (k-1) * sum(wi) / (sum(wi)^2 - sum(wi^2))
     tau_squared<- random_effect$tau2
     total_variability <- vt + tau_squared
     
     data <- data.frame(
  VarianceType = c("Between-study Variance (œÑ¬≤)", "Sampling Variability (œÉ¬≤)"),
  Proportion = c(tau_squared / total_variability, vt / total_variability)
)


    # Create forest plot
    p1<-forest_plot <- ggplot(plot_data, aes(x = reorder(study, rev(study)))) +
      geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), width = 0.2, size = 1) + 
      geom_point(aes(y = mean_ratio,color = factor(color))) +
      {if (input$show_mean) geom_point(aes(y = mean_1), color = "red", size = 4, pch = 8)
      }+
      geom_hline(yintercept = true_effect_size, linetype = "dashed", color = "blue") +  
      labs(title = "Forest Plot : Random Effect Model",
           subtitle = paste("I¬≤ = ", round(random_effect$I2, 2), "%"),
           x = "Studies",
           y = "Effect Size (Ratio)") +
      theme_minimal() +
      theme(legend.position = "none") +  # Remove legend for clarity
      coord_flip() +
       geom_rect(aes(xmin = -Inf, xmax = Inf,
                     ymin = true_effect_size - 1.96 * sd_true,
                     ymax = true_effect_size + 1.96 * sd_true), 
                 fill = "blue", alpha = 0.05)+
           geom_point(aes(y = mean_ratio,size = 1/se, color = factor(color))) +
      scale_size_continuous(range = c(2, 5))+
      geom_text(aes(x=reorder(study, rev(study)), y=0.5, label=paste0("n=",n)))+
      geom_hline(yintercept = true_effect_size, linetype = "dotted", color = "blue")

    
    p2<- ggplot(data, aes(x = "", y = Proportion, fill = VarianceType)) +
     geom_bar(stat = "identity") +  # Flip the axes for better readability
     labs(title = "Proportions of Variance in Meta-analysis (I¬≤)",
          x = "",
          y = "Proportion") +
     scale_fill_manual(values = c("#FF9999", "#66B3FF")) +  # Custom colors
     theme_minimal() +
     theme(legend.title = element_blank())+coord_flip()
    
    
    # Display the forest plot
   grid.arrange(p1, p2, ncol = 1, heights = c(3, 1))
  })
}

# Run the application 
shinyApp(ui = ui, server = server)
```

## Methods for Estimating œÑ¬≤

-   **DerSimonian-Laird (DL)**: Widely used but underestimates with high heterogeneity.
-   **Restricted Maximum Likelihood (REML)**: Less biased, recommended for small samples.
-   **Hedges & Olkin (HO)**: Adjusted moment estimator.
-   **Paule-Mandel (PM)**: Performs well under high heterogeneity.
-   **Bayesian Estimation**: Provides a distribution for œÑ¬≤, useful with prior knowledge.

## Understanding Knapp-Hartung Adjustments {.smaller}

-   The **Knapp-Hartung Adjustments** are applied to improve the accuracy of **confidence intervals** in random-effects meta-analyses.

-   They adjust the **standard errors** of the pooled effect size to account for the uncertainty in estimating between-study variance (œÑ¬≤).

-   More **conservative** than traditional methods, resulting in **wider confidence intervals**, especially when the number of studies is small or heterogeneity is high.

-   Recommended for **meta-analyses with few studies** (\< 10).

-   Useful when between-study heterogeneity is suspected but difficult to quantify accurately.

-   Can prevent **false positives** by reducing the risk of overestimating precision.

## Mixed Model Estimation {.scrollable}

### ![](images/random_model.png){fig-align="center"}

## Three-Level Meta-Analytic Model {.smaller}

Overview

Three-level meta-analysis extends the traditional random-effects model by incorporating an additional level to account for dependencies in the data, such as multiple effect sizes within studies. This approach models the variability at three levels:

1.  **Level 1**: Sampling variability within effect sizes.
2.  **Level 2**: Variability between effect sizes within studies.
3.  **Level 3**: Variability between studies.

### Purpose of the Model {.smaller}

The three-level model is ideal for datasets with hierarchical structures, allowing for accurate estimation of variance components and avoiding underestimation of standard errors. This model is frequently used when there are multiple outcomes per study or when primary studies include repeated measures.

## Three-Level Meta-Analytic Model {.smaller}

### Formula

$$\hat{\theta}_{ij} = \mu + u_k + \zeta_{kj} + \epsilon_{kj}$$

$$u_j \sim N(0, \tau_1^2); \quad \zeta_{ij} \sim N(0, \tau_2^2); \quad \epsilon_{ij} \sim N(0, s_{kj}^2)$$

Where:

-   hat_theta_kj: Estimated effect size for the ( k )-th effect size in the ( j )-th study.
-   mu: The overall mean effect size.
-   u_k: Random effect for study ( k ), with ( \tau\_1\^2 ) as the between-study variance.
-   zeta\_{kj}: Random effect for effect size ( k ) within study ( j )
-   epsilon_kj: Error term, with ( v\_{kj} ) representing the sampling variance.

## Three level random effect model: weights

. - Weights for individual effect sizes are defined as:

$$
w_{ij} = \frac{1}{\tau_1^2 + \tau_2^2 + v_{ij}}
$$

## Three level random effect model

Let's say RR=1.5; (ùúÉ_ùëò )¬†ÃÇ=ùúá+ ùúÅ\_((2)ùëóùëò)+ùúÅ\_((3)ùëó) „Äñ+ ùúÄ„Äó\_ùëóùëò

```{shinylive-r}
#| standalone: true
#| viewerHeight: 600
# Load necessary libraries
library(shiny)
library(metafor)
library(ggplot2)
library(truncnorm)
library(gridExtra)
library(dplyr)
library(magrittr)

# Define UI
ui <- fluidPage(
  titlePanel("Forest Plot with Three-Level Meta-Analytical Model"),
  
  sidebarLayout(
    sidebarPanel(
      sliderInput("sd_true", "Standard Deviation of True Effect Size:",
                  min = 0, max = 1, value = 0.05, step = 0.01),
      sliderInput("sd_sampling", "Standard Deviation of Sampling Error:",
                  min = 0, max = 1, value = 0.2, step = 0.01),
      sliderInput("sd_group", "Standard Deviation of Group Effect:",
                  min = 0, max = 1, value = 0.15, step = 0.01),  # New slider for group effect variance
      sliderInput("n_studies", "Number of Studies:",
                  min = 3, max = 15, value = 10, step = 1),
      sliderInput("n_groups", "Number of Groups:",
                  min = 2, max = 5, value = 3, step = 1),
      checkboxInput("show_mean", "Show mean without sample error", value = TRUE)
    ),
    
    mainPanel(
      plotOutput("forestPlot")
    )
  )
)

# Define server logic
server <- function(input, output) {
  
  output$forestPlot <- renderPlot({
    # Set parameters
    set.seed(113)  # For reproducibility
    true_effect_size <- 1.5  # Specify a true effect size (e.g., ratio)
    sd_true <- input$sd_true
    sd_sampling <- input$sd_sampling
    sd_group <- input$sd_group  # Standard deviation for group effects
    n_studies <- input$n_studies
    n_groups <- input$n_groups
    
    # Assign each study to a group
    group_assignments <- rep(1:n_groups, length.out = n_studies)
    
    # Generate studies data
    studies <- data.frame(
      study = paste("Study", 1:n_studies),
      n = sample(20:100, n_studies),  # Random sample sizes for each study
      group = factor(group_assignments)
    ) %>% arrange(group) %>% mutate(study = paste("Study", 1:n_studies))

    # Generate random group effects and add to the true effect sizes
    group_effects <- rnorm(n_groups, mean = 0, sd = sd_group)
    studies$group_effect <- group_effects[studies$group]
    
    # Generate true effect sizes with associated group and sampling error
    studies$group_effect<- studies$group_effect+  true_effect_size
    studies$mean_1 <- studies$group_effect+ rnorm(n_studies, mean = 0, sd = sd_true)   
    studies$mean_ratio <- studies$mean_1 + rnorm(n_studies, mean = 0, sd = sd_sampling)
    
    # Generate standard errors from a truncated normal distribution
    studies$se <- rtruncnorm(n_studies, a = 0, mean = 0.2, sd = 0.1)
    
    # Calculate confidence intervals
    studies$ci_lower <- studies$mean_ratio - 1.96 * studies$se
    studies$ci_upper <- studies$mean_ratio + 1.96 * studies$se
    studies$color <- 2
    
    # Calculate overall effect size using a three-level model
    random_effect <- rma.mv(yi = mean_ratio, V = se^2, random = ~ 1 | group/study, data = studies)
    
    # Create summary table for the overall effect size
    summary_table <- data.frame(
      study = "Overall_random_effect",
      n = NA,
      group = NA,
      mean_1 = NA,
      group_effect = NA,
      mean_ratio = random_effect$b,
      se = NA,
      ci_lower = random_effect$ci.lb,
      ci_upper = random_effect$ci.ub,
      color = 1
    )
    
    # Combine study data with overall effect size
    plot_data <- rbind(studies, summary_table)
    

  #  Create forest plot
    p1 <- ggplot(plot_data, aes(x = reorder(study, rev(group)))) +
      geom_errorbar(aes(ymin = ci_lower, ymax = ci_upper), width = 0.2, size = 1) +
      geom_point(aes(y = mean_ratio, color = factor(group))) +
   {if (input$show_mean) geom_point(aes(y = mean_1), color = "red", size = 4, pch = 8)} +
     {if (input$show_mean) geom_point(aes(y = group_effect), color = "orange", size = 4, pch = 9)} +
      geom_hline(yintercept = true_effect_size, linetype = "dashed", color = "blue") +
      labs(title = "Forest Plot: Three-Level Meta-Analysis Model",
           x = "Studies",
           y = "Effect Size (Ratio)") +
      theme_minimal() +
      theme(legend.position = "none") +
      coord_flip() +
      geom_text(aes(x = reorder(study, rev(study)), y = 0.5, label = paste0("Group = ", group, "; n = ", n))) +
      scale_size_continuous(range = c(2, 5)) +
      geom_hline(yintercept = true_effect_size, linetype = "dotted", color = "blue")+
             geom_rect(aes(xmin = -Inf, xmax = Inf,
                     ymin = true_effect_size - 1.96 * sd_true,
                     ymax = true_effect_size + 1.96 * sd_true), 
                 fill = "blue", alpha = 0.05)

    # Display the forest plot
    p1
  })
}

# Run the application 
shinyApp(ui = ui, server = server)
```

## Three level random effect model

![](images/3_level.png){fig-align="center"}


## Subgroup Analyses {.smaller}

### Definition
- **Subgroup Analysis** involves dividing studies into distinct groups based on specific characteristics to assess whether effect sizes vary across these groups.

### Purpose
- To identify factors that influence the effect of an intervention and to better understand heterogeneity among study results.

---

## When to Conduct Subgroup Analyses {.smaller}

### Criteria for Subgroup Analysis
- **Significant Heterogeneity:** High I¬≤ values suggest further investigation is warranted.
- **Hypothesis Testing:** When researchers have specific hypotheses regarding differences in effects.
- **Interest in Specific Populations:** To evaluate how different demographics (e.g., age, gender) respond to an intervention.

---

## Methodology of Subgroup Analyses {.smaller}

### Statistical Approach
- Analyze subsets of data separately and compare effect sizes across groups.
- Use a meta-analytic model for each subgroup, maintaining consistency with overall methodology.

### Formula
- For subgroup analyses, the overall model can be modified to include group-specific parameters:

$$
\hat{\theta}_{g,k} = \mu_g + \zeta_{g,k} + \epsilon_{g,k}
$$

Where:
- \( \hat{\theta}_{g,k} \): Estimated effect size for study \( k \) in group \( g \).
- \( \mu_g \): Overall mean effect for group \( g \).
- \( \zeta_{g,k} \): Random effect for study \( k \) in group \( g \).
- \( \epsilon_{g,k} \): Error term for study \( k \) in group \( g \).

---


## Meta-Regression {.smaller}

### Definition
- **Meta-Regression** extends meta-analysis by examining how study-level covariates influence effect sizes.

### Purpose
- To explore relationships between study characteristics (e.g., sample size, intervention duration) and observed effects.

---

## Meta-Regression Methodology {.smaller}

### Statistical Approach
- The meta-regression model includes covariates that may explain variability in effect sizes:

$$
\hat{\theta}_k = \mu + \beta_1 x_1 + \beta_2 x_2 + \ldots + \beta_p x_p + \zeta_k + \epsilon_k
$$

Where:
- \( x_i \): Study-level covariate.
- \( \beta_i \): Coefficient indicating the relationship between \( x_i \) and effect size.

---

## Benefits of Meta-Regression {.smaller}

### Advantages
- **Identify Predictors of Variability:** Helps clarify which factors influence intervention effectiveness.
- **Informs Future Research Directions:** Insights from meta-regression can guide future studies and hypotheses.

---

## Challenges in Meta-Regression {.smaller}

### Considerations
- **Sample Size Requirements:** Requires sufficient studies with varying characteristics for robust results.
- **Complexity of Interpretation:** Interactions among covariates can complicate understanding.

