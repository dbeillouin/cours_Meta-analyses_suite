{
  "hash": "6b7bb4b8cdcc31cb9eeb017518c9c0f5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"cours_effect_size\"\nsubtitle: \"September 2024\"\nauthors: \"Damien Beillouin  <br/> \nCIRAD-Hortsys\"\nformat:\n  revealjs:\n    width: 1150\n    margin: 0.08\n    transition: slide\n    background-transition: fade\n    slide-number: true\n    show-slide-number: print\n    footer: \"How to calculate and combine effect-sizes?\"\nfilters:\n  - shinylive\neditor: visual\ntitle-slide-attributes: \n  data-background-image: elephant.png\n  data-background-size: 25%\n  data-background-position: 90% 80%\ninclude-in-header:\n  - text: |\n      <style>\n      #title-slide .title {\n        font-size: 1.5em;\n        color: black;\n      }\n      </style>\n---\n\n\n\n## Pooling Effect Sizes {.smaller}\n\nPooling effect sizes is essential for synthesizing results across studies in meta-analysis. Different models can be employed based on the data structure and assumptions.\n\n------------------------------------------------------------------------\n\n## Fixed-Effect Model {.smaller}\n\nThe **Fixed-Effect Model** assumes that all studies estimate the same underlying effect size.\n\n### Key Features:\n\n-   Assumes homogeneity of effect sizes across studies.\n-   Only one common effect size is estimated.\n\n### Formula:\n\n$$ \n\\hat{\\mu}_{FE} = \\frac{\\sum_{i=1}^k w_i \\hat{\\mu}_i}{\\sum_{i=1}^k w_i} \n$$\n\nWhere:\\\n- ( \\hat{\\mu}\\_{FE} ): Fixed-effect pooled estimate.\\\n- ( w_i ): Weight for study ( i ) (typically the inverse of variance).\\\n- ( \\hat{\\mu}\\_i ): Effect size from study ( i ).\n\n## Fixed-Effect Model {.smaller}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Pool_ES_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n\n## Random-Effects Model {.smaller}\n\nThe **Random-Effects Model** accounts for variability among studies, assuming that effect sizes vary due to different study conditions.\n\n### Key Features:\n\n-   Assumes heterogeneity of effect sizes across studies.\n-   Incorporates both within-study and between-study variation.\n\n### Formula:\n\n(𝜃_𝑘 ) ̂=𝜃+ 𝜀_𝑘;〖 𝜀〗\\_(𝑘\\~) Ν(0,𝑠_𝑘\\^2)\n\nWhere:\\\n- ( w_i\\^\\* = \\frac{1}{\\sigma^2 + \\tau^2} ) (with ( \\tau\\^2 ) being the estimated between-study variance).\n\n## Example: Pooling Effect Sizes {.smaller}\n\n### Study Data\n\n| Study | Effect Size (( \\hat{\\mu} )) | Variance (( \\sigma\\^2 )) |\n|-------|-----------------------------|--------------------------|\n| 1     | 0.50                        | 0.10                     |\n| 2     | 0.70                        | 0.15                     |\n| 3     | 0.60                        | 0.20                     |\n\n### Fixed-Effect Calculation:\n\n-   Calculate weights ( w_i ).\n-   Pool effect sizes using the fixed-effect formula.\n\n### Random-Effects Calculation:\n\n-   Estimate between-study variance ( \\tau\\^2 ).\n-   Calculate adjusted weights ( w_i\\^\\* ).\n-   Pool effect sizes using the random-effects formula.\n\n------------------------------------------------------------------------\n\n## Summary {.smaller}\n\n-   **Fixed-Effect Model**: Assumes homogeneity, uses one common effect size.\n-   **Random-Effects Model**: Accounts for heterogeneity, estimates variability between studies.\n-   **Heterogeneity Assessment**: Essential for model choice; use Cochran's Q and I² statistics.\n\n------------------------------------------------------------------------\n\n## References {.smaller}\n\n1.  Borenstein, M., Hedges, L. V., Higgins, J. P. T., & Rothstein, H. R. (2009). **Introduction to Meta-Analysis**. Wiley.\n2.  Viechtbauer, W. (2010). \"Conducting Meta-Analyses in R with the `metafor` Package.\" *Journal of Statistical Software*, 36(3), 1-48.\n",
    "supporting": [
      "Pool_ES_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}